name: Continuous integration

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: contact_db        
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgre
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install project dependencies
        run: npm ci

      - name: Set up default port .env
        run: echo "PORT=3000" >> .env

      - name: Set up base url path .env
        run: echo "BASE_URL_PATH=/api/v1" >> .env

      - name: Set up database .env variables
        run: echo "DATABASE_URL=postgresql://postgres:postgre@localhost:5432/contact_db?schema=public" >> .env

      - name: Set up jwt secret .env variables
        run: echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Set up jwt expiration time .env variables
        run: echo "JWT_EXPIRED_IN_MINUTES=${{ secrets.JWT_EXPIRED_IN_MINUTES }}" >> .env

      - name: Run database migration files
        run: npm run migrate

      - name: Run test
        run: npm test

  push_to_Docker_Hub:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/contact-api:latest